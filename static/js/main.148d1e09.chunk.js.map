{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","sortReverse","setSortReverse","visibleGoods","goods","sortType","reverse","preparedGoods","sort","a","b","alpha","localeCompare","length","default","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,cAAAA,E,gBAAAA,I,sBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAjCR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAa,YAAOH,GAqB1B,OAnBIC,GACFE,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQL,GACN,KAAKV,EAASgB,MACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEI,OAASH,EAAEG,OAEtB,QACE,OAAOlB,EAASmB,YAKpBR,GACFC,EAAcD,UAGTC,EAOcQ,CACnBnB,EACAG,EACAE,GAGF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,EAAaL,EAASgB,QACrCK,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAcJ,EAASgB,QAJvC,iCAUA,wBACEO,QAAS,kBAAMlB,EAAaL,EAASkB,SACrCI,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAcJ,EAASkB,SAJvC,4BAUA,wBACEK,QAAS,kBAAMhB,GAA+B,IAAhBD,IAC9BgB,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAalB,IAJjB,sBAUEF,IAA6B,IAAhBE,IACb,wBACEiB,QAAS,WACPlB,EAAa,IACbE,GAAe,IAEjBc,UAAU,4BACVC,KAAK,SANP,sBAaJ,6BACGd,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.148d1e09.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const SORT_FIELD_ALPHA = 'alpha';\n// const SORT_FIELD_LENGTH = 'length';\n\nenum SortType {\n  alpha = 'alpha',\n  length = 'length',\n  default = 0,\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortType: string,\n  reverse: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.alpha:\n          return a.localeCompare(b);\n\n        case SortType.length:\n          return a.length - b.length;\n\n        default:\n          return SortType.default;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortReverse, setSortReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    sortReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alpha)}\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.alpha,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.length)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortReverse(sortReverse === false)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !sortReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || sortReverse === true) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setSortReverse(false);\n            }}\n            className=\"button is-danger is-light\"\n            type=\"button\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}